{{- define "mongodbUri" -}}
{{- if .Values.pcs.enableMongoReplicaSet }}
mongodb://{{ .Values.mongodb.username }}:{{ .Values.mongodb.password }}@mongodb-svc/open5gs
{{- else }}
mongodb://{{ .Values.mongodb.username }}:{{ .Values.mongodb.password }}@mongodb-svc/open5gs
{{- end }}
{{- end }}

{{- if not .Values.pcs.enableMongoReplicaSet }}
apiVersion: v1
kind: Service
metadata:
  name: mongodb-svc
spec:
  ports:
    - port: 27017
  selector:
    app: open5gs-mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: open5gs-mongodb-metrics
spec:
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
  selector:
    app: open5gs-mongodb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open5gs-mongodb
spec:
  selector:
    matchLabels:
      app: open5gs-mongodb
  template:
    metadata:
      labels:
        app: open5gs-mongodb
    spec:
      {{ if .Values.pcs.nodeAffinity.enabled }}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: pcs-nf-type
                operator: In
                values:
                - {{ .Values.pcs.nodeAffinity.mongo | quote }}
      {{ end }}
      {{- include "ztxInitContainer" . | nindent 6 }}
      serviceAccountName: open5gs
      containers:
        {{- include "ztxAppTemplate" . | nindent 8 }}
        - image: "{{ .Values.mongodb.image.repository }}:{{ .Values.mongodb.image.tag }}"
          command: ["mongod", "--bind_ip_all"]
          imagePullPolicy: {{ .Values.mongodb.image.pullPolicy }}
          name: open5gs-mongodb
          ports:
            - containerPort: 27017
              name: mongodb
          env:
          - name: MONGODB_INITDB_ROOT_USERNAME
            value: {{ .Values.mongodb.username | default "root" | quote }}
          - name: MONGODB_INITDB_ROOT_PASSWORD
            value: {{ .Values.mongodb.username | default "root" | quote }}
          volumeMounts:
            - name: mongodb-persistent-storage-{{ .Release.Namespace }}
              mountPath: /data/db_{{ .Release.Namespace }}
        
        # MongoDB Exporter Sidecar
        - name: mongodb-exporter
          image: percona/mongodb_exporter:0.43.0
          args:
            - "--mongodb.uri=mongodb://{{ .Values.mongodb.username }}:{{ .Values.mongodb.password }}@127.0.0.1:27017"
            - "--log.level=info"
            - "--collect-all"
            - "--web.listen-address=:9090"
            - "--mongodb.global-conn-pool"
          ports:
            - containerPort: 9090
              name: metrics
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"

      volumes:
        - name: mongodb-persistent-storage-{{ .Release.Namespace }}
          persistentVolumeClaim:
            claimName: mongodb-pv-claim-{{ .Release.Namespace }}
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongodb-pv-volume-{{ .Release.Namespace }}
  labels:
    type: local
spec:
  persistentVolumeReclaimPolicy: Delete
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-pv-claim-{{ .Release.Namespace }}
spec:
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
{{- end }}